<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mobile on Mesh Studio</title>
    <link>https://meshstudio.io/tags/mobile/</link>
    <description>Recent content in Mobile on Mesh Studio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Sep 2018 09:44:38 -0700</lastBuildDate>
    
	<atom:link href="https://meshstudio.io/tags/mobile/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>React Native Typescript Boilerplate</title>
      <link>https://meshstudio.io/blog/2018-09-14-react-native-boilerplate/</link>
      <pubDate>Fri, 14 Sep 2018 09:44:38 -0700</pubDate>
      
      <guid>https://meshstudio.io/blog/2018-09-14-react-native-boilerplate/</guid>
      <description>React Native has established itself as an incredibly powerful tool for building cross-platform mobile applications. We set out to try and create a clone-able repository so developers can jump right into building features/UI instead of spending hours configuring their environment.
Getting Started If you want to jump right into developing your own cross-platform mobile application, get started with the README here.
If you want more insight into the tooling/frameworks used in this project - continue reading.</description>
    </item>
    
    <item>
      <title>React Native Navigation</title>
      <link>https://meshstudio.io/blog/2018-05-08-react-native-navigation/</link>
      <pubDate>Tue, 08 May 2018 11:59:08 -0700</pubDate>
      
      <guid>https://meshstudio.io/blog/2018-05-08-react-native-navigation/</guid>
      <description>React Native navigation code can seem very odd to developers coming from Objective C or Swift. Whereas native code asks that developers subclass Navigation and Tab Bar controllers, React Native demands that app navigation must be scaffolded in a single constructor.
This seemed more than a little odd when I first started doing React Native development. I was also frustrated to find that React Native&amp;rsquo;s documentation doesn&amp;rsquo;t really provide much guidance beyond the ‘Hello World’ set up.</description>
    </item>
    
    <item>
      <title>3 Reasons You Should Consider React Native</title>
      <link>https://meshstudio.io/blog/2018-05-03-three-reasons-you-should-consider-react-native/</link>
      <pubDate>Thu, 03 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://meshstudio.io/blog/2018-05-03-three-reasons-you-should-consider-react-native/</guid>
      <description>We are constantly evaluating new technologies and frameworks at Mesh. We do this to ensure that we make the right technology choices for our customers. We do after all, get paid to make these technology choices, so we have an obligation to our customers to make sure our choices are correct.
One of the frameworks that we’ve had our eye on for a while, but hadn’t pulled the trigger with is React Native.</description>
    </item>
    
    <item>
      <title>August Mobile SDKs</title>
      <link>https://meshstudio.io/work/august/</link>
      <pubDate>Thu, 01 Feb 2018 12:21:35 -0800</pubDate>
      
      <guid>https://meshstudio.io/work/august/</guid>
      <description>August Home is the brainchild of famed industrial designer Yves Behar and Jason Johnson. Founded in 2013, the company designs and manufactures beautiful, connected home security products. August’s product lineup has grown to include connected locks, doorbells, and cameras.
The company had raised over $70MM from-top tier venture capitalists like Maveron and Bessemer Venture Partners and was acquired by Assa Abloy in October of 2017.
Problem August’s connected products are controlled with a smartphone through a mix of Bluetooth and WiFi.</description>
    </item>
    
  </channel>
</rss>