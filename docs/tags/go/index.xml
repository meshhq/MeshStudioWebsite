<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on Mesh Studio</title>
    <link>https://meshstudio.io/tags/go/</link>
    <description>Recent content in Go on Mesh Studio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Jun 2018 15:35:36 -0800</lastBuildDate>
    
	<atom:link href="https://meshstudio.io/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Streaming with GawkBox</title>
      <link>https://meshstudio.io/work/gawkbox/</link>
      <pubDate>Thu, 28 Jun 2018 15:35:36 -0800</pubDate>
      
      <guid>https://meshstudio.io/work/gawkbox/</guid>
      <description>GawkBox is building an app that allows fans to acquire subscriptions on Twitch and Mixer for free. Subscriptions on Twitch and Mixer are one of the key points of engagement between creators and their communities, enabling fans to interact more closely with their favourite creators. Instead of paying between $5 and $25 per month for subscriptions, GawkBox allows users to pay for them by downloading and playing free games.</description>
    </item>
    
    <item>
      <title>Serving HTML with Golang</title>
      <link>https://meshstudio.io/blog/2017-11-06-serving-html-with-golang/</link>
      <pubDate>Mon, 06 Nov 2017 10:09:12 -0800</pubDate>
      
      <guid>https://meshstudio.io/blog/2017-11-06-serving-html-with-golang/</guid>
      <description>Here at Mesh, we like to keep up-to-date with the latest trends in software development; often trying out various programming languages and frameworks. One of the languages that we like to use is Go. We appreciate that Go is strongly-typed, is opinionated about formatting, and is strict about keeping the structure of programs simple. It is also quite a versatile language, so in this post we will explore how it can be used to create an HTML server using gorilla/mux, jteeuwen/go-bindata, and html/template.</description>
    </item>
    
  </channel>
</rss>