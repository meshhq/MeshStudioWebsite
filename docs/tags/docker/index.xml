<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Mesh Studio</title>
    <link>https://meshstudio.io/tags/docker/</link>
    <description>Recent content in Docker on Mesh Studio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://meshstudio.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Intro to Docker with TypeScript</title>
      <link>https://meshstudio.io/blog/2017-12-13-intro-to-docker-with-typescript/</link>
      <pubDate>Wed, 13 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://meshstudio.io/blog/2017-12-13-intro-to-docker-with-typescript/</guid>
      <description>Over the past few years Docker has emerged as one of the most efficient ways to manage and deploy cloud-based web applications‚òÅÔ∏è üíª¬†. While containers have been around since 2008, Docker helped them go mainstream, fueling the Virtual Machine vs. Container argument.
What are Docker Containers? (and why should I care?) In short, a container is an operating system agnostic environment that hosts a fully functional application. Docker uses a virtual machine under the hood which allows developers to declare runtime dependencies via a Dockerfile.</description>
    </item>
    
  </channel>
</rss>